; Based heavily on http://developer.wordnik.com/docs.html
[api]
; apikey=your_api_key_here
apikey=
[examples]
; Returns examples for a word
;
; Show duplicate examples from different sources
; default: false
includeDuplicates=false
; Results to skip
skip=0
; Maximum number of results to return
limit=5
[definitions]
; Return definitions for a word
;
; Maximum number of results to return
limit=200
; CSV list of part-of-speech types
; possible values:
; blank,noun,adjective,verb,adverb,interjection,pronoun,preposition,abbreviation,
; affix,article,auxiliary-verb,conjunction,definite-article,family-name,given-name,
; idiom,imperative,noun-plural,noun-posessive,past-participle,phrasal-prefix,proper-noun,
; proper-noun-plural,proper-noun-posessive,suffix,verb-intransitive,verb-transitive
partOfSpeech=
; Return related words with definitions
includeRelated=true
; Source dictionary to return definitions from. If 'all' is received,
; results are returned from all sources. If multiple values are received
; (e.g. 'century,wiktionary'), results are returned from the first specified
; dictionary that has definitions. If left blank, results are returned
; from the first dictionary that has definitions. By default, dictionaries
; are searched in this order: ahd, wiktionary, webster, century, wordnet
; possible values:
; all,ahd,century,wiktionary,webster,wordnet
sourceDictionaries=all
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
[topExample]
; Returns a top example for a word
;
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
[relatedWords]
; Given a word as a string, returns relationships from the Word Graph
;
; Limits the total results per type of relationship type
; possible values:
; blank,synonym,antonym,variant,equivalent,cross-reference,related-word,rhyme,
; form,etymologically-related-term,hypernym,hyponym,inflected-form,primary,
; same-context,verb-form,verb-stem
relationshipTypes=
; Restrict to the supplied relationship types
limitPerRelationshipType=10
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
[pronunciations]
; Returns text pronunciations for a given word
;
; Get from a single dictionary
; possible values:
; blank,ahd,century,cmu,macmillan,wiktionary,webster,wordnet
sourceDictionary=
; Text pronunciation type
; possible values:
; blank,ahd,arpabet,gcide-diacritical,IPA
typeFormat=
; Maximum number of results to return
limit=50
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
[hyphenation]
; Returns syllable information for a word
;
; Get from a single dictionary.
; possible values:
; blank,ahd,century,wiktionary,webster,wordnet.
sourceDictionary=
; Maximum number of results to return
limit=50
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
[frequency]
; Returns word usage over time
;
; starting year
startYear=1800
; ending year
endYear=2012
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
[phrases]
; Fetches bi-gram phrases for a word
;
; Maximum number of results to return
limit=5
; Minimum WLMI for the phrase
; (Note, I don't know what this does, but it is listed as an option on the wordnik API so I put it here)
wlmi=0
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
[etymologies]
; fetches etymology data
;
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
[audio]
; Fetches audio metadata for a word
;
; Maximum number of results to return
limit=50
; If true will try to return the correct word root ('cats' -> 'cat').
; If false returns exactly what was requested.
useCannonical=false
